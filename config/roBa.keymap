#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// #define MOUSE 4
#define SCROLL 4
// #define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E     &kp R                 &kp T                                               &kp Y        &kp U  &kp I      &kp O    &kp P
&mt LCTRL A       &kp S         &kp D     &kp F                 &kp G  &none                       &none            &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C     &kp V                 &kp B  &mo 5                       &none            &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_SHIFT    &kp LEFT_ALT  &kp LCMD  &lt_to_layer_0 2 TAB  &mo 1  &lt_to_layer_0 3 SPACE      &lt 1 BACKSPACE  &lt 2 ENTER                             &kp TILDE
            >;
        };

        NUM {
            bindings = <
&kp ESC         &none           &kp UP_ARROW    &none            &none                            &kp KP_PLUS      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0
&kp LG(A)       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none          &none      &none  &kp KP_MINUS     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DOT
&kp LG(Z)       &kp LG(X)       &kp LG(C)       &kp LG(V)        &kp LG(LS(V))  &none      &none  &kp KP_ASTERISK  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SLASH
&kp LEFT_SHIFT  &kp LEFT_ALT    &kp LEFT_GUI    &none            &none          &none      &none  &kp RIGHT_GUI                                                       &kp BACKSPACE
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT        &kp HASH      &kp DOLLAR  &kp PERCENT                    &kp CARET  &kp AMPERSAND  &kp ASTRK         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LC(A)        &none         &none         &none       &none        &none      &none  &none      &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&kp LS(Z)        &none         &none         &none       &none        &none      &none  &none      &none          &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp SEMICOLON
&kp LEFT_SHIFT   &kp LEFT_ALT  &kp LEFT_GUI  &none       &none        &none      &none  &none                                                             &kp BACKSLASH
            >;
        };

        MOUSE {
            bindings = <
&trans          &trans        &trans        &trans  &kp LS(LG(NUMBER_5))                                &kp LG(R)        &kp LG(LEFT_ARROW)  &kp LC(UP_ARROW)  &kp LG(RIGHT_ARROW)  &none
&trans          &trans        &trans        &trans  &trans                &kp LG(KP_PLUS)       &trans  &kp LC(LS(TAB))  &mkp MB1            &mo 4             &mkp MB2             &kp LC(TAB)
&kp LEFT_SHIFT  &none         &none         &none   &none                 &kp LG(KP_MINUS)      &trans  &trans           &trans              &none             &trans               &trans
&kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_GUI  &none   &none                 &none                 &none   &kp RIGHT_GUI                                                               &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BT {
            bindings = <
&none  &none  &none  &none  &none                          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none  &none      &none        &none         &none         &none         &none         &none
&none  &none  &none  &none  &none  &none      &bootloader  &none         &none         &none         &none         &bt BT_CLR
&none  &none  &none  &none  &none  &none      &none        &none                                                   &bt BT_CLR_ALL
            >;
        };
    };
};
